## v1.1.0
* Fix any bug.
* Fix not refresh data
* Fix error in Angular 1.3
* Combinding with list-tree *(ol,ul, li, present not compatible - beta)*
* Add infomation node into Node Target after DropStop:
```js
    scope.$callbacks.dragStop(dragInfo, _status);
```
    * _status: Status changed pos of node, Drag succeed!
    * dragInfo:
        * node:          scope.node(), // Data node dragged
        * scope:         scope, // Scope node
        * level:         scope.node().__level__, // Level indent
        * target:        scope.prev(), // Node prev
        * move:
            * parent: -1, // -1: Dragged failed, null: node root, > 0: node normal
            * pos:    -1 // Position new Note moveTo


* Add 'data' to TreeTableNode  `tree-table-node=data` in template;
```html
<tr tree-table-node="row" ng-repeat="row in tree_rows track by hashedTree(row)"
                            ng-show="row.__visible__" ng-class="(row.__selected__ ? ' active':'')" class="ng-animate ">
    ....
</tr>
```
* Add class for tree-table *(auto render to `tree_class` add to <table ng-class="tree_table">)*
```html
    <tree-table
        class="tree-table table table-hover b-b b-light"
        tree-data="tree_data" tree-control="my_tree">
    </tree-table>
```

## v1.0.3

* Add attribute 'primaryKey' to filter & reload data in repeat best (instead of default __uid__ = now())
* Add function `hashedTree` to `track by` on ng-repeat
* Fix any error when drag.
* Add demo new.
```js
    	<tree-table 
    		tree-data="tree_data" 
    		tree-control="my_tree" 
    		primary-key="primaryKey" 
    		callbacks="callbacks"
                drag-enabled="true" 
                icon-leaf="none" 
                icon-expand="fa fa-fw fa-angle-right"
                icon-collapse="fa fa-fw fa-angle-down" 
                column-defs="col_defs" 
                expand-on="expanding_property"
                template-url="tree-table-template.html" 
                on-select="my_tree_handler(branch)"
                on-click="my_tree_handler(branch)" 
                data-indent="30" data-indent-unit="px"
                data-indent-plus="15">
        </tree-table>
```

## V1.0.2
###Add function $TreeTableConvert.line2tree -> convert data line to tree vaild.

**Desciption**

```js
line2tree(data, keyPrimary, keyParent);
```

**Example:**
```js
var data = [
	{
		id: 1, 
		parent: null
	},
	{id: 2},
	{id: 3},
	{id: 4},
	{
		id: 5,
		parent: 4
	}
]

*$scope.tree_data = $TreeTableConvert.line2tree(data, 'id', 'parent');

```

***

###Add function $TreeTableConvert.tree2tree -> convert data tree to tree vaild.

**Desciption**
```js
line2tree(data, keyChildren);
```

**Example:**

```js
var data = [
	id: 1
	children: [
		{id: 2},
		{id: 3},
		{id: 4}
		{
			id: 5,
			children: []
		}
	]
];

$scope.tree_data = $TreeTableConvert.tree2tree(data, 'children');
```

***

**Result data tree vaild**
```js
   data = [
	id: 1
	__children__: [
		{id: 2},
		{id: 3},
		{id: 4}
		{
			id: 5,
			__children__: []
		}
	]
]
```
